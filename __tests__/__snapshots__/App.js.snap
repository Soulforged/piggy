// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders home screen on login 1`] = `
<View
  onLayout={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
    ]
  }
>
  <View
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
          "flexDirection": "column-reverse",
        },
        Object {
          "backgroundColor": "#000",
        },
      ]
    }
  >
    <View
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        collapsable={undefined}
        pointerEvents="auto"
        style={
          Object {
            "backgroundColor": "#E9E9EF",
            "bottom": 0,
            "left": 0,
            "opacity": 1,
            "position": "absolute",
            "right": 0,
            "shadowColor": "black",
            "shadowOffset": Object {
              "height": 0,
              "width": 0,
            },
            "shadowOpacity": 0.2,
            "shadowRadius": 5,
            "top": 0,
            "transform": Array [
              Object {
                "translateX": 0,
              },
              Object {
                "translateY": 0,
              },
            ],
          }
        }
      >
        <View
          onLayout={[Function]}
          style={
            Array [
              Object {
                "flex": 1,
              },
            ]
          }
        >
          <View
            onMoveShouldSetResponder={[Function]}
            onMoveShouldSetResponderCapture={[Function]}
            onResponderEnd={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderReject={[Function]}
            onResponderRelease={[Function]}
            onResponderStart={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            onStartShouldSetResponderCapture={[Function]}
            style={
              Array [
                Object {
                  "flex": 1,
                  "flexDirection": "column-reverse",
                },
                Object {
                  "backgroundColor": "#000",
                },
              ]
            }
          >
            <View
              style={
                Object {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={undefined}
                pointerEvents="auto"
                style={
                  Object {
                    "backgroundColor": "#E9E9EF",
                    "bottom": 0,
                    "left": 0,
                    "opacity": 1,
                    "position": "absolute",
                    "right": 0,
                    "shadowColor": "black",
                    "shadowOffset": Object {
                      "height": 0,
                      "width": 0,
                    },
                    "shadowOpacity": 0.2,
                    "shadowRadius": 5,
                    "top": 0,
                    "transform": Array [
                      Object {
                        "translateX": 0,
                      },
                      Object {
                        "translateY": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  onMoveShouldSetResponder={[Function]}
                  onMoveShouldSetResponderCapture={[Function]}
                  onResponderEnd={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderReject={[Function]}
                  onResponderRelease={[Function]}
                  onResponderStart={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  onStartShouldSetResponderCapture={[Function]}
                  style={
                    Object {
                      "backgroundColor": "transparent",
                      "flex": 1,
                    }
                  }
                >
                  <View
                    collapsable={undefined}
                    style={
                      Object {
                        "flex": 1,
                        "zIndex": 0,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    >
                      <MapView
                        region={
                          Object {
                            "latitude": 37.78825,
                            "latitudeDelta": 0.0922,
                            "longitude": -122.4324,
                            "longitudeDelta": 0.0421,
                          }
                        }
                        style={
                          Object {
                            "bottom": 0,
                            "left": 0,
                            "position": "absolute",
                            "right": 0,
                            "top": 0,
                          }
                        }
                      />
                      <TextInput
                        allowFontScaling={true}
                        onChangeText={[Function]}
                        placeholder="¿Qué querés enviar?"
                        style={
                          Object {
                            "backgroundColor": "white",
                            "height": 44,
                            "margin": 10,
                          }
                        }
                      />
                      <TextInput
                        allowFontScaling={true}
                        placeholder="¿A dónde?"
                        style={
                          Object {
                            "backgroundColor": "white",
                            "height": 44,
                            "margin": 10,
                          }
                        }
                      />
                    </View>
                  </View>
                  <View
                    accessibilityComponentType={undefined}
                    accessibilityLabel={undefined}
                    accessibilityTraits={undefined}
                    accessible={true}
                    collapsable={undefined}
                    hitSlop={undefined}
                    nativeID={undefined}
                    onLayout={undefined}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    pointerEvents="none"
                    style={
                      Object {
                        "backgroundColor": "#000",
                        "bottom": 0,
                        "left": 0,
                        "opacity": 0,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                        "zIndex": 1000,
                      }
                    }
                    testID={undefined}
                  />
                  <View
                    accessibilityViewIsModal={false}
                    collapsable={undefined}
                    style={
                      Object {
                        "backgroundColor": "white",
                        "bottom": 0,
                        "left": 0,
                        "position": "absolute",
                        "right": null,
                        "top": 0,
                        "transform": Array [
                          Object {
                            "translateX": -320,
                          },
                        ],
                        "width": 320,
                        "zIndex": 1001,
                      }
                    }
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "flex": 1,
                          },
                          undefined,
                        ]
                      }
                    >
                      <RCTScrollView
                        alwaysBounceVertical={false}
                      >
                        <View>
                          <View
                            collapsable={undefined}
                            onLayout={[Function]}
                            style={
                              Object {
                                "paddingBottom": 0,
                                "paddingLeft": 0,
                                "paddingRight": 0,
                                "paddingTop": 20,
                              }
                            }
                          >
                            <View
                              style={
                                Array [
                                  Object {
                                    "paddingVertical": 4,
                                  },
                                  undefined,
                                ]
                              }
                            >
                              <View
                                accessibilityComponentType={undefined}
                                accessibilityLabel={undefined}
                                accessibilityTraits={undefined}
                                accessible={true}
                                collapsable={undefined}
                                hasTVPreferredFocus={undefined}
                                hitSlop={undefined}
                                isTVSelectable={true}
                                nativeID={undefined}
                                onLayout={undefined}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                                style={
                                  Object {
                                    "opacity": 1,
                                  }
                                }
                                testID={undefined}
                                tvParallaxProperties={undefined}
                              >
                                <View
                                  collapsable={undefined}
                                  onLayout={[Function]}
                                  style={
                                    Object {
                                      "backgroundColor": "rgba(0, 0, 0, .04)",
                                      "paddingBottom": 0,
                                      "paddingLeft": 0,
                                      "paddingRight": 0,
                                      "paddingTop": 0,
                                    }
                                  }
                                >
                                  <View
                                    style={
                                      Array [
                                        Object {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                        },
                                        undefined,
                                      ]
                                    }
                                  >
                                    <View
                                      style={
                                        Array [
                                          Object {
                                            "alignItems": "center",
                                            "marginHorizontal": 16,
                                            "width": 24,
                                          },
                                          null,
                                          undefined,
                                        ]
                                      }
                                    >
                                      <Text
                                        accessible={true}
                                        allowFontScaling={false}
                                        ellipsizeMode="tail"
                                        style={
                                          Array [
                                            Object {
                                              "color": undefined,
                                              "fontSize": 30,
                                            },
                                            undefined,
                                            Object {
                                              "fontFamily": "Ionicons",
                                              "fontStyle": "normal",
                                              "fontWeight": "normal",
                                            },
                                          ]
                                        }
                                      >
                                        
                                      </Text>
                                    </View>
                                    <Text
                                      accessible={true}
                                      allowFontScaling={true}
                                      ellipsizeMode="tail"
                                      style={
                                        Array [
                                          Object {
                                            "fontWeight": "bold",
                                            "margin": 16,
                                          },
                                          Object {
                                            "color": "#2196f3",
                                          },
                                          undefined,
                                        ]
                                      }
                                    >
                                      HomeScreen
                                    </Text>
                                  </View>
                                </View>
                              </View>
                            </View>
                          </View>
                        </View>
                      </RCTScrollView>
                    </View>
                  </View>
                </View>
              </View>
            </View>
            <View
              cardStyle={undefined}
              collapsable={undefined}
              getScreenDetails={[Function]}
              headerMode="float"
              index={0}
              layout={
                Object {
                  "height": 0,
                  "initHeight": 0,
                  "initWidth": 0,
                  "isMeasured": false,
                  "width": 0,
                }
              }
              leftInterpolator={[Function]}
              mode="float"
              navigation={
                Object {
                  "addListener": [Function],
                  "dispatch": [Function],
                  "goBack": [Function],
                  "navigate": [Function],
                  "pop": [Function],
                  "popToTop": [Function],
                  "push": [Function],
                  "replace": [Function],
                  "setParams": [Function],
                  "state": Object {
                    "index": 0,
                    "isTransitioning": false,
                    "key": "id-1482363367071-13",
                    "routeName": "Main",
                    "routes": Array [
                      Object {
                        "index": 0,
                        "isTransitioning": false,
                        "key": "Init-id-1482363367071-12",
                        "routeName": "Drawer",
                        "routes": Array [
                          Object {
                            "index": 0,
                            "isTransitioning": false,
                            "key": "DrawerClose",
                            "params": undefined,
                            "routeName": "DrawerClose",
                            "routes": Array [
                              Object {
                                "key": "Home",
                                "params": undefined,
                                "routeName": "Home",
                              },
                            ],
                          },
                          Object {
                            "key": "DrawerOpen",
                            "params": undefined,
                            "routeName": "DrawerOpen",
                          },
                          Object {
                            "key": "DrawerToggle",
                            "params": undefined,
                            "routeName": "DrawerToggle",
                          },
                        ],
                      },
                    ],
                    "type": "Navigation/NAVIGATE",
                  },
                }
              }
              rightInterpolator={[Function]}
              router={
                Object {
                  "getActionForPathAndParams": [Function],
                  "getComponentForRouteName": [Function],
                  "getComponentForState": [Function],
                  "getPathAndParamsForState": [Function],
                  "getScreenConfig": [Function],
                  "getScreenOptions": [Function],
                  "getStateForAction": [Function],
                }
              }
              titleInterpolator={[Function]}
              transitionConfig={undefined}
            >
              <View
                collapsable={undefined}
                onLayout={[Function]}
                style={
                  Object {
                    "backgroundColor": "#4C3E54",
                    "borderBottomColor": "rgba(0, 0, 0, .3)",
                    "borderBottomWidth": 0.5,
                    "height": 64,
                    "paddingBottom": 0,
                    "paddingLeft": 0,
                    "paddingRight": 0,
                    "paddingTop": 20,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "flex": 1,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "bottom": 0,
                          "left": 0,
                          "position": "absolute",
                          "right": 0,
                          "top": 0,
                        },
                        Object {
                          "flexDirection": "row",
                        },
                      ]
                    }
                  >
                    <View
                      collapsable={undefined}
                      pointerEvents="box-none"
                      style={
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "transparent",
                          "bottom": 0,
                          "justifyContent": "center",
                          "left": 70,
                          "opacity": 1,
                          "position": "absolute",
                          "right": 70,
                          "top": 0,
                          "transform": Array [
                            Object {
                              "translateX": 0,
                            },
                          ],
                        }
                      }
                    >
                      <Text
                        accessibilityTraits="header"
                        accessible={true}
                        allowFontScaling={true}
                        collapsable={undefined}
                        ellipsizeMode="tail"
                        numberOfLines={1}
                        onLayout={[Function]}
                        style={
                          Object {
                            "color": "white",
                            "fontSize": 17,
                            "fontWeight": "600",
                            "marginHorizontal": 16,
                            "textAlign": "center",
                          }
                        }
                      >
                        Welcome!
                      </Text>
                    </View>
                    <View
                      collapsable={undefined}
                      pointerEvents="box-none"
                      style={
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "transparent",
                          "bottom": 0,
                          "justifyContent": "center",
                          "left": 0,
                          "opacity": 1,
                          "position": "absolute",
                          "top": 0,
                        }
                      }
                    >
                      <View
                        accessibilityComponentType={undefined}
                        accessibilityLabel={undefined}
                        accessibilityTraits={undefined}
                        accessible={true}
                        hasTVPreferredFocus={undefined}
                        hitSlop={undefined}
                        isTVSelectable={true}
                        nativeID={undefined}
                        onLayout={undefined}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Array [
                            Object {
                              "overflow": "hidden",
                            },
                            Object {
                              "backgroundColor": "#007AFF",
                              "borderRadius": 5,
                            },
                          ]
                        }
                        testID={undefined}
                        tvParallaxProperties={undefined}
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "alignItems": "center",
                                "flexDirection": "row",
                                "justifyContent": "flex-start",
                                "padding": 8,
                              },
                              Object {
                                "backgroundColor": "#007AFF",
                                "borderRadius": 5,
                              },
                              undefined,
                            ]
                          }
                        >
                          <Text
                            accessible={true}
                            allowFontScaling={false}
                            ellipsizeMode="tail"
                            onPress={[Function]}
                            style={
                              Array [
                                Object {
                                  "color": "white",
                                  "fontSize": 30,
                                },
                                Object {
                                  "marginRight": 10,
                                },
                                Object {
                                  "fontFamily": "Ionicons",
                                  "fontStyle": "normal",
                                  "fontWeight": "normal",
                                },
                              ]
                            }
                          >
                            
                          </Text>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`renders without crashing 1`] = `
<View
  onLayout={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
    ]
  }
>
  <View
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
          "flexDirection": "column-reverse",
        },
        Object {
          "backgroundColor": "#000",
        },
      ]
    }
  >
    <View
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        collapsable={undefined}
        pointerEvents="auto"
        style={
          Object {
            "backgroundColor": "#E9E9EF",
            "bottom": 0,
            "left": 0,
            "opacity": 1,
            "position": "absolute",
            "right": 0,
            "shadowColor": "black",
            "shadowOffset": Object {
              "height": 0,
              "width": 0,
            },
            "shadowOpacity": 0.2,
            "shadowRadius": 5,
            "top": 0,
            "transform": Array [
              Object {
                "translateX": 0,
              },
              Object {
                "translateY": 0,
              },
            ],
          }
        }
      >
        <View
          onLayout={[Function]}
          style={
            Array [
              Object {
                "flex": 1,
              },
            ]
          }
        >
          <View
            onMoveShouldSetResponder={[Function]}
            onMoveShouldSetResponderCapture={[Function]}
            onResponderEnd={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderReject={[Function]}
            onResponderRelease={[Function]}
            onResponderStart={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            onStartShouldSetResponderCapture={[Function]}
            style={
              Array [
                Object {
                  "flex": 1,
                  "flexDirection": "column-reverse",
                },
                Object {
                  "backgroundColor": "#000",
                },
              ]
            }
          >
            <View
              style={
                Object {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={undefined}
                pointerEvents="auto"
                style={
                  Object {
                    "backgroundColor": "#E9E9EF",
                    "bottom": 0,
                    "left": 0,
                    "opacity": 1,
                    "position": "absolute",
                    "right": 0,
                    "shadowColor": "black",
                    "shadowOffset": Object {
                      "height": 0,
                      "width": 0,
                    },
                    "shadowOpacity": 0.2,
                    "shadowRadius": 5,
                    "top": 0,
                    "transform": Array [
                      Object {
                        "translateX": 0,
                      },
                      Object {
                        "translateY": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  style={
                    Object {
                      "flex": 1,
                    }
                  }
                >
                  <TextInput
                    allowFontScaling={true}
                    onChangeText={[Function]}
                    placeholder="Usuario"
                    style={
                      Object {
                        "backgroundColor": "white",
                        "height": 44,
                        "margin": 10,
                      }
                    }
                  />
                  <TextInput
                    allowFontScaling={true}
                    onChangeText={[Function]}
                    placeholder="Password"
                    style={
                      Object {
                        "backgroundColor": "white",
                        "height": 44,
                        "margin": 10,
                      }
                    }
                  />
                  <View
                    accessibilityComponentType="button"
                    accessibilityLabel={undefined}
                    accessibilityTraits={
                      Array [
                        "button",
                      ]
                    }
                    accessible={true}
                    collapsable={undefined}
                    hasTVPreferredFocus={undefined}
                    hitSlop={undefined}
                    isTVSelectable={true}
                    nativeID={undefined}
                    onLayout={undefined}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "opacity": 1,
                      }
                    }
                    testID={undefined}
                    tvParallaxProperties={undefined}
                  >
                    <View
                      style={
                        Array [
                          Object {},
                        ]
                      }
                    >
                      <Text
                        accessible={true}
                        allowFontScaling={true}
                        disabled={undefined}
                        ellipsizeMode="tail"
                        style={
                          Array [
                            Object {
                              "color": "#007AFF",
                              "fontSize": 18,
                              "padding": 8,
                              "textAlign": "center",
                            },
                          ]
                        }
                      >
                        Login
                      </Text>
                    </View>
                  </View>
                </View>
              </View>
            </View>
            <View
              cardStyle={undefined}
              collapsable={undefined}
              getScreenDetails={[Function]}
              headerMode="float"
              index={0}
              layout={
                Object {
                  "height": 0,
                  "initHeight": 0,
                  "initWidth": 0,
                  "isMeasured": false,
                  "width": 0,
                }
              }
              leftInterpolator={[Function]}
              mode="float"
              navigation={
                Object {
                  "addListener": [Function],
                  "dispatch": [Function],
                  "goBack": [Function],
                  "navigate": [Function],
                  "pop": [Function],
                  "popToTop": [Function],
                  "push": [Function],
                  "replace": [Function],
                  "setParams": [Function],
                  "state": Object {
                    "index": 0,
                    "isTransitioning": false,
                    "key": "Init-id-1482363367071-11",
                    "routeName": "Login",
                    "routes": Array [
                      Object {
                        "key": "Init-id-1482363367071-10",
                        "params": undefined,
                        "routeName": "Login",
                      },
                    ],
                  },
                }
              }
              rightInterpolator={[Function]}
              router={
                Object {
                  "getActionForPathAndParams": [Function],
                  "getComponentForRouteName": [Function],
                  "getComponentForState": [Function],
                  "getPathAndParamsForState": [Function],
                  "getScreenConfig": [Function],
                  "getScreenOptions": [Function],
                  "getStateForAction": [Function],
                }
              }
              titleInterpolator={[Function]}
              transitionConfig={undefined}
            >
              <View
                collapsable={undefined}
                onLayout={[Function]}
                style={
                  Object {
                    "backgroundColor": "#E73536",
                    "borderBottomColor": "rgba(0, 0, 0, .3)",
                    "borderBottomWidth": 0.5,
                    "height": 64,
                    "paddingBottom": 0,
                    "paddingLeft": 0,
                    "paddingRight": 0,
                    "paddingTop": 20,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "flex": 1,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "bottom": 0,
                          "left": 0,
                          "position": "absolute",
                          "right": 0,
                          "top": 0,
                        },
                        Object {
                          "flexDirection": "row",
                        },
                      ]
                    }
                  >
                    <View
                      collapsable={undefined}
                      pointerEvents="box-none"
                      style={
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "transparent",
                          "bottom": 0,
                          "justifyContent": "center",
                          "left": 0,
                          "opacity": 1,
                          "position": "absolute",
                          "right": 0,
                          "top": 0,
                          "transform": Array [
                            Object {
                              "translateX": 0,
                            },
                          ],
                        }
                      }
                    >
                      <Text
                        accessibilityTraits="header"
                        accessible={true}
                        allowFontScaling={true}
                        collapsable={undefined}
                        ellipsizeMode="tail"
                        numberOfLines={1}
                        onLayout={[Function]}
                        style={
                          Object {
                            "color": "white",
                            "fontSize": 17,
                            "fontWeight": "600",
                            "marginHorizontal": 16,
                            "textAlign": "center",
                          }
                        }
                      >
                        Welcome
                      </Text>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;
